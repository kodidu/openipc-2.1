name: OpenIPC for XM530

on:
  push:
    branches:
      - master
    tags:
      - "v*"
      
  workflow_dispatch:
  
jobs:
  build_core:
    name: OpenIPC v2.0 for XM530
    runs-on: ubuntu-18.04

    steps:

      - name: Checkout
        id: checkout
        uses: actions/checkout@v2

      - name: Install build dependencies
        id: install
        run: |
          make install-deps
          mkdir -p tmp

      - name: Free disk space
        id: freshing
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h

      - name: Prepare buildroot
        id: prepare
        run: |
          HEAD_TAG=$(git tag --points-at HEAD)
          GIT_HASH=$(git rev-parse --short $GITHUB_SHA)
          BRANCH_NAME=$(echo $GITHUB_REF | cut -d'/' -f 3)
          if [ -z "$HEAD_TAG" ]; then
            TAG_NAME="latest"
            RELEASE_NAME="Development Build"
            PRERELEASE=true
          else
            TAG_NAME=${{ github.ref }}
            RELEASE_NAME="Release ${{ github.ref }}"
            PRERELEASE=false
          fi
          echo "GIT_HASH=$GIT_HASH" >> $GITHUB_ENV
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV
          echo "PRERELEASE=$PRERELEASE" >> $GITHUB_ENV
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          cd $GITHUB_WORKSPACE
          make prepare

      - name: Build XM530 firmware
        id: build-xm530-firmware
        continue-on-error: true
        run: |
          ARCHIVE_FW="${GITHUB_WORKSPACE}/output/images/openipc.xm530-br.tgz"
          echo "ARCHIVE_FW=$ARCHIVE_FW" >> $GITHUB_ENV
          cd $GITHUB_WORKSPACE
          make PLATFORM=xiongmai BOARD=unknown_unknown_xm530_openipc all
          mv ${GITHUB_WORKSPACE}/output/images/uImage ${GITHUB_WORKSPACE}/output/images/uImage.xm530
          mv ${GITHUB_WORKSPACE}/output/images/rootfs.squashfs ${GITHUB_WORKSPACE}/output/images/rootfs.squashfs.xm530
          tar -C ${GITHUB_WORKSPACE}/output/images -cvzf $ARCHIVE_FW rootfs.squashfs.xm530 uImage.xm530

      - name: Build XM530 SDK
        id: build-xm530-sdk
        continue-on-error: true
        run: |
          ARCHIVE_SDK="${GITHUB_WORKSPACE}/output/images/arm-openipc-linux-musleabi_sdk-buildroot.tar.gz"
          echo "ARCHIVE_SDK=$ARCHIVE_SDK" >> $GITHUB_ENV
          cd $GITHUB_WORKSPACE/output
          make sdk


      - name: Create release
        uses: actions/create-release@v1
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: ${{ env.RELEASE_NAME }}
          draft: false
          prerelease: ${{ env.PRERELEASE }}

      - name: Upload FW to release
        uses: svenstaro/upload-release-action@v2
        continue-on-error: true
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.ARCHIVE_FW }}
          asset_name: "openipc.xm530-br.tgz"
          tag: ${{ env.TAG_NAME }}
          overwrite: true

      - name: Upload SDK to release
        uses: svenstaro/upload-release-action@v2
        continue-on-error: true
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.ARCHIVE_SDK }}
          asset_name: "arm-openipc-xm530-linux-musleabi_sdk-buildroot.tar.gz"
          tag: ${{ env.TAG_NAME }}
          overwrite: true
